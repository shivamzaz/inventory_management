# -*- coding: utf-8 -*-
from __future__ import unicode_literals
"""
Django settings for inventory_management project.

Generated by 'django-admin startproject' using Django 1.11.3.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
root = lambda *x: os.path.join(BASE_DIR, *x)



try:
    from .prelocal import *
except:
    redis_host = os.environ.get('REDIS_HOST', 'localhost')
    
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'bp_w()c)gtn@rkt^pdsro!mi^6%4ecw4zy4wi(4curilopfc18'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'django.contrib.redirects',
    #feature flag should come before apps
    # Utilities
    'django_user_agents',
    'django_jinja',
    'django_extensions',
    'rest_framework',
    'rest_framework.authtoken',
    'djcelery',

]
PROJECT_APPS = [
        'inventory',
        'frontend',
    ]

INSTALLED_APPS += PROJECT_APPS


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # 'inventory.middleware.CachedTemplateMiddleware',
]

ROOT_URLCONF = 'inventory_management.urls'

from django_jinja.builtins import DEFAULT_EXTENSIONS

TEMPLATES = [
    {
        'BACKEND': 'django_jinja.backend.Jinja2',
        'DIRS': [
            root('templates'),
        ],
        'OPTIONS': {
            "match_extension": ".jinja",
            "context_processors": [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.contrib.auth.context_processors.auth',
                'django.template.context_processors.i18n',
                'django.template.context_processors.media',
                'django.template.context_processors.static',
                'django.template.context_processors.tz',
                'django.contrib.messages.context_processors.messages',

            ],
        }
    },
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'APP_DIRS': True,
        'DIRS': [
            root('templates'),
        ],
        'OPTIONS': {
            'debug': DEBUG,
            'context_processors': [
                'django.contrib.auth.context_processors.auth',
                'django.template.context_processors.debug',
                'django.template.context_processors.i18n',
                'django.template.context_processors.media',
                'django.template.context_processors.static',
                'django.template.context_processors.tz',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    }
]

WSGI_APPLICATION = 'inventory_management.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases
DATABASES = {
   'default': {
       'ENGINE': 'django.db.backends.mysql',
       'NAME': 'inventory',
       'USER': 'root',
       'PASSWORD': 'root',
       'HOST': '',  # Empty for localhost through domain sockets or '127.0.0.1' for localhost through TCP.
       'PORT': '',  # Set to empty string for default.
       'OPTIONS': {'charset': 'utf8mb4'},
   }
}

# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


CELERY = {
    'BROKER_URL': 'redis://' + redis_host + ':6379/0',
    'CELERY_RESULT_BACKEND': 'redis://' + redis_host + ':6379/0',
    'CELERY_TASK_RESULT_EXPIRES': None ,
    'CELERY_SEND_EVENTS': True, # needed for worker monitoring
    'CELERY_TIMEZONE': 'Asia/Kolkata',
    'CELERY_IGNORE_RESULT': False,
    'CELERYBEAT_SCHEDULER':'djcelery.schedulers.DatabaseScheduler'
}


CACHES = {
    'default': {
        'BACKEND': 'django_redis.cache.RedisCache',
        'LOCATION': 'redis://' + redis_host + ':6379',
        'OPTIONS': {
            'DB': 0,
        },
    },
}

CACHED_VIEWS = {
}

STATIC_URL = '/static/'
MEDIA_URL = '/media/'
STATIC_ROOT = root('./static/')
MEDIA_ROOT = root('./media/')

STATICFILES_DIRS = (
    root('../static'),
)

STATICFILES_FINDERS = (
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
)

# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/
import os.path

STATIC_ROOT = ''

STATIC_URL = '/static/'

STATICFILES_DIRS = ( os.path.join('static'), )

env_url = "http://127.0.0.1:8001"
